/*Code to create Quote and Quote Lines Automatically (Sample Code is also present on the community.steelbrick.com)

https://community.steelbrick.com/t5/Developer-Guidebook/Public-API-Technical-Documentation-amp-Code-1/ta-p/5690
*/
public class QuoteAPIExample { 
 
    private class QuoteModel { 
        public SBQQ__Quote__c record; 
        public QuoteLineModel[] lineItems; 
        public QuoteLineGroupModel[] lineItemGroups; 
 
        public Integer nextKey; 
        public Boolean applyAdditionalDiscountLast; 
        public Boolean applyPartnerDiscountFirst; 
        public Boolean channelDiscountsOffList; 
        public Decimal customerTotal; 
        public Decimal netTotal; 
        public Decimal netNonSegmentTotal; 
    } 
 
    private class QuoteLineModel { 
        public SBQQ__QuoteLine__c record; 
 
        public Boolean amountDiscountProrated; 
        public Integer parentGroupKey; 
        public Integer parentItemKey; 
        public Integer key; 
        public Boolean upliftable; 
        public String configurationType; 
        public String configurationEvent; 
        public Boolean reconfigurationDisabled; 
        public Boolean descriptionLocked; 
        public Boolean productQuantityEditable; 
        public Decimal productQuantityScale; 
        public String dimensionType; 
        public Boolean productHasDimensions; 
        public Decimal targetCustomerAmount; 
        public Decimal targetCustomerTotal; 
    } 
 
    private class QuoteLineGroupModel { 
        public SBQQ__QuoteLineGroup__c record; 
 
        public Decimal netNonSegmentTotal; 
        public Integer key; 
    } 
 
    private class ProductModel { 
        public Product2 record; 
        public String currencyCode; 
    } 
 
    private static Account customer; 
    private static Opportunity opp; 
    private static SBQQ__Quote__c quoteRec; 
    private static List<Product2> sampleProducts; 
    private static List<PricebookEntry> entries; 
    private static List<SBQQ__ProductOption__c> prodOptions; 
    private static List<SBQQ__QuoteLine__c> lines; 
 
 
    public static void setUpQuote() { 
        customer = new Account(Name='Customer'); 
        insert customer; 
 
        opp = new Opportunity(AccountId = customer.Id, Name = 'Test', CloseDate = System.today().addMonths(12), StageName = 'Test', Pricebook2Id = '01s1I000005n5ZM'); 
        insert opp; 
 
        quoteRec = new SBQQ__Quote__c(SBQQ__Opportunity2__c = opp.Id, SBQQ__StartDate__c = System.today(), SBQQ__SubscriptionTerm__c = 12); 
        insert quoteRec; 
 
        sampleProducts = new List<Product2>{ 
                new Product2(Name = 'Bundle Parent', IsActive = true, SBQQ__AssetConversion__c = 'One per quote line'), 
                new Product2(Name = 'Subscription Child', IsActive = true, SBQQ__SubscriptionPricing__c = 'Percent Of Total', SBQQ__SubscriptionTerm__c = 12, SBQQ__SubscriptionType__c = 'Renewable'), 
                new Product2(Name = 'Non-Subscription Child 1', IsActive = true, SBQQ__AssetConversion__c = 'One per quote line'), 
                new Product2(Name = 'Non-Subscription Child 2', IsActive = true, SBQQ__AssetConversion__c = 'One per quote line'), 
                new Product2(Name = 'Standalone', IsActive = true, SBQQ__AssetConversion__c = 'One per unit'), 
                new Product2(Name = 'Subscription Extra', IsActive = true, SBQQ__SubscriptionPricing__c = 'Fixed Price', SBQQ__SubscriptionTerm__c = 12, SBQQ__SubscriptionType__c = 'Renewable') 
        }; 
        insert sampleProducts; 
 
        entries = new List<PricebookEntry>(); 
        entries.add(new PricebookEntry(Pricebook2Id = '01s1I000005n5ZM', Product2Id = sampleProducts[0].Id, IsActive = true, UnitPrice = 100)); 
        entries.add(new PricebookEntry(Pricebook2Id = '01s1I000005n5ZM', Product2Id = sampleProducts[1].Id, IsActive = true, UnitPrice = 200)); 
        entries.add(new PricebookEntry(Pricebook2Id = '01s1I000005n5ZM', Product2Id = sampleProducts[2].Id, IsActive = true, UnitPrice = 100)); 
        entries.add(new PricebookEntry(Pricebook2Id = '01s1I000005n5ZM', Product2Id = sampleProducts[3].Id, IsActive = true, UnitPrice = 100)); 
        entries.add(new PricebookEntry(Pricebook2Id = '01s1I000005n5ZM', Product2Id = sampleProducts[4].Id, IsActive = true, UnitPrice = 100)); 
        entries.add(new PricebookEntry(Pricebook2Id = '01s1I000005n5ZM', Product2Id = sampleProducts[5].Id, IsActive = true, UnitPrice = 100)); 
        insert entries; 
 
        prodOptions = new List<SBQQ__ProductOption__c>(); 
        // 3 bundle children 
        prodOptions.add(new SBQQ__ProductOption__c(SBQQ__Number__c = 20, SBQQ__ConfiguredSKU__c = sampleProducts[0].Id, SBQQ__Type__c = 'Component', SBQQ__OptionalSKU__c = sampleProducts[1].Id)); 
        prodOptions.add(new SBQQ__ProductOption__c(SBQQ__Number__c = 30, SBQQ__ConfiguredSKU__c = sampleProducts[0].Id, SBQQ__Type__c = 'Component', SBQQ__OptionalSKU__c = sampleProducts[2].Id)); 
        prodOptions.add(new SBQQ__ProductOption__c(SBQQ__Number__c = 40, SBQQ__ConfiguredSKU__c = sampleProducts[0].Id, SBQQ__Type__c = 'Component', SBQQ__OptionalSKU__c = sampleProducts[3].Id)); 
        insert prodOptions; 
 
        lines = new List<SBQQ__QuoteLine__c>(); 
        // Bundle 
        lines.add(new SBQQ__QuoteLine__c(SBQQ__Quote__c = quoteRec.Id, SBQQ__Product__c = sampleProducts[0].Id, SBQQ__Quantity__c = 1, SBQQ__NetPrice__c = 100)); 
        // Subscription child 
        lines.add(new SBQQ__QuoteLine__c(SBQQ__Quote__c = quoteRec.Id, SBQQ__Product__c = sampleProducts[1].Id, SBQQ__Quantity__c = 1, SBQQ__SubscriptionPricing__c = 'Percent Of Total', SBQQ__StartDate__c = System.today(), SBQQ__EndDate__c = System.today().addMonths(12).addDays(-1), SBQQ__DefaultSubscriptionTerm__c = 12, SBQQ__ListPrice__c = 200, SBQQ__NetPrice__c = 200)); 
        // Asset children 
        lines.add(new SBQQ__QuoteLine__c(SBQQ__Quote__c = quoteRec.Id, SBQQ__Product__c = sampleProducts[2].Id, SBQQ__Quantity__c = 1, SBQQ__ListPrice__c = 200, SBQQ__NetPrice__c = 200)); 
        lines.add(new SBQQ__QuoteLine__c(SBQQ__Quote__c = quoteRec.Id, SBQQ__Product__c = sampleProducts[3].Id, SBQQ__Quantity__c = 1, SBQQ__ListPrice__c = 200, SBQQ__NetPrice__c = 200)); 
        // Standalone 
        lines.add(new SBQQ__QuoteLine__c(SBQQ__Quote__c = quoteRec.Id, SBQQ__Product__c = sampleProducts[4].Id, SBQQ__Quantity__c = 1, SBQQ__ListPrice__c = 200, SBQQ__NetPrice__c = 200)); 
        insert lines; 
 
        lines[0].SBQQ__Bundle__c = true; 
        lines[1].SBQQ__RequiredBy__c = lines[0].Id; 
        lines[2].SBQQ__RequiredBy__c = lines[0].Id; 
        lines[3].SBQQ__RequiredBy__c = lines[0].Id; 
        update lines; 
    }
}	

